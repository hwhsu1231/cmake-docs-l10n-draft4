# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: ci-gettext-update-po

on:
  # Triggers the workflow when a pull request modifying any file in 'l10n/' is closed on the 'master' branch.
  pull_request:
    types: 
      - 'closed'
    branches: 
      - 'source'
    paths:
      - 'l10n/**'
  # Allows for the workflow to be manually started through the GitHub UI
  workflow_dispatch:
    inputs:
      TYPE:
        description: 'Set TYPE input'
        required: true
        type: choice
        default: 'matrix'
        options:
          - 'matrix'
          - 'single'
      VERSION:
        description: 'Set VERSION input (for single type)'
        required: true
        type: string
        default: 'git-master'
      LANGUAGE:
        description: 'Set LANGUAGE input (for single type)'
        required: true
        type: string
        default: 'all'
      UPDATE_MODE:
        description: 'Set UPDATE_MODE input'
        required: true
        type: choice
        default: 'COMPARE'
        options:
          - 'COMPARE'
          - 'ALWAYS'
          - 'NEVER'

jobs:
  pr-version:
    if: (github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'gettext'))
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.evprt.outputs.VERSION }}
    steps:
      - name: Extract VERSION from the Pull Request Title
        id: evprt
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          VERSION_REGEX="pot\(([^)]+)\):"
          if [[ $PR_TITLE =~ $VERSION_REGEX ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Extracted version: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version format not found in PR title"
            exit 1
          fi

  pr-merged:
    if: (github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'gettext'))
    needs: pr-version
    secrets: inherit
    concurrency:
      group: ${{ github.workflow }}-${{ needs.pr-version.outputs.VERSION }}
      cancel-in-progress: true
    uses: ./.github/workflows/use-gettext-update-po.yml
    with:
      VERSION: ${{ needs.pr-version.outputs.VERSION }}
      LANGUAGE: 'all'
      UPDATE_MODE: 'ALWAYS'
      CALLER_JOB: 'pr-merged'
      ENABLE_JOB: true

  get-matrix:
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.TYPE == 'matrix')
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.rvm.outputs.VERSION }}
    steps:
      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Read VERSION from matrix.json
        id: rvm
        run: |
          FILTER=".include | map(.VERSION)"
          VERSION=$(jq -c "$FILTER" .github/workflows/matrix.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION:"
          echo "$VERSION" | jq "."

  matrix:
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.TYPE == 'matrix')
    needs: get-matrix
    secrets: inherit
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.VERSION }}-${{ matrix.LANGUAGE }}
      cancel-in-progress: true
    strategy:
      matrix: 
        VERSION: ${{ fromJson(needs.get-matrix.outputs.VERSION) }}
        LANGUAGE: [ 'all' ]
      fail-fast: false
    uses: ./.github/workflows/use-gettext-update-po.yml
    with:
      VERSION: ${{ matrix.VERSION }}
      LANGUAGE: ${{ matrix.LANGUAGE }}
      UPDATE_MODE: ${{ github.event.inputs.UPDATE_MODE || 'COMPARE' }}
      CALLER_JOB: 'matrix (${{ matrix.VERSION }}, ${{ matrix.LANGUAGE }})'
      ENABLE_JOB: true

  single:
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.TYPE == 'single')
    secrets: inherit
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.inputs.VERSION }}-${{ github.event.inputs.LANGUAGE }}
      cancel-in-progress: true
    uses: ./.github/workflows/use-gettext-update-po.yml
    with:
      VERSION: ${{ github.event.inputs.VERSION }}
      LANGUAGE: ${{ github.event.inputs.LANGUAGE }}
      UPDATE_MODE: ${{ github.event.inputs.UPDATE_MODE }}
      CALLER_JOB: 'single'
      ENABLE_JOB: true
